{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["var breakpoint = {\n  large: 1140, // desktop and large screens\n  medium: 1024, // tablets\n  small: 768, // mobile phones\n};\n\n$(function(){\n  console.log('App init');\n  initRangeDatepicker();\n  initSlickCarousel();\n  initCountUp();\n  initRangeSlider('priceRangeSlider');\n  initRangeSlider('mileageRangeSlider');\n  initFancyBoxy();\n  initLayoutSwitcher();\n});\n\nfunction initRangeDatepicker(){\n  $('input[name=\"daterange\"]').daterangepicker(\n  {\n      locale: {\n        format: 'YYYY-MM-DD'\n      },\n      startDate: '2017-01-01',\n      endDate: '2017-12-31'\n  },\n  function(start, end, label) { // callback\n    // alert(\"A new date range was chosen: \" + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD'));\n  });\n}\n\nfunction initSlickCarousel(){\n  $('.grid-carousel').css('visibility','visible');\n\n  $('.slick-carousel-4').slick({\n    infinite: false,\n    nextArrow: '<i class=\"fa fa-chevron-right slick-next\" aria-hidden=\"true\"></i>',\n    prevArrow: '<i class=\"fa fa-chevron-left slick-prev\" aria-hidden=\"true\"></i>',\n    slidesToShow: 4,\n    responsive: [\n      {\n        breakpoint: breakpoint.large,\n        settings: {\n          slidesToShow: 4,\n        }\n      },\n      {\n        breakpoint: breakpoint.medium,\n        settings: {\n          slidesToShow: 3,\n        }\n      },\n      {\n        breakpoint: breakpoint.small,\n        settings: {\n          slidesToShow: 2,\n        }\n      },\n    ]\n  });\n\n  $('.slick-carousel-3').slick({\n    infinite: false,\n    nextArrow: '<i class=\"fa fa-chevron-right slick-next\" aria-hidden=\"true\"></i>',\n    prevArrow: '<i class=\"fa fa-chevron-left slick-prev\" aria-hidden=\"true\"></i>',\n    slidesToShow: 3,\n    responsive: [\n      {\n        breakpoint: breakpoint.large,\n        settings: {\n          slidesToShow: 3,\n        }\n      },\n      {\n        breakpoint: breakpoint.medium,\n        settings: {\n          slidesToShow: 3,\n        }\n      },\n      {\n        breakpoint: breakpoint.small,\n        settings: {\n          slidesToShow: 1,\n        }\n      },\n    ]\n  });\n}\n\nfunction initCountUp(){\n  countUp();\n  $(window).on('scroll',function(){\n    countUp();\n  });\n}\n\nfunction countUp(){\n  $('[data-count-up]').each(function() {\n    if( isVisible(this) ){\n      var $this = $(this);\n      var countTo = $this.data('count-up');\n\n      $({ countNum: $this.text()}).animate({\n        countNum: countTo\n      },\n      {\n        duration: 1000,\n        easing:'linear',\n        step: function() {\n          $this.text(Math.floor(this.countNum));\n        },\n        complete: function() {\n          $this.text(this.countNum);\n        }\n      });\n    }\n  });\n}\n\nfunction initRangeSlider(id)\n{\n  var sliderID = $('#'+id);\n  \n  if( sliderID.length ){\n    var container = sliderID.closest('.rangeSliderWrap'),\n        minText = container.find('.rangeMinText'),\n        maxText = container.find('.rangeMaxText'),\n        minValue = container.find('.rangeMinValue'),\n        maxValue = container.find('.rangeMaxValue');\n\n    var slider = new Slider(document.getElementById(id), {\n      isDate: false,\n      min: sliderID.data('initial-start'),\n      max: sliderID.data('initial-end'),\n      start: sliderID.data('start'),\n      end: sliderID.data('end'),\n      overlap: true\n    });\n\n    slider.subscribe('moving', function(data) {\n      var dataLeft = roundTo(data.left,'down'),\n          dataRight = roundTo(data.right, 'up');\n\n      minText.text( dataLeft );\n      maxText.text( dataRight );\n      minValue.val( dataLeft );\n      maxValue.val( dataRight );\n    });\n\n    var dataLeft = roundTo(slider.getInfo().left, 'down'),\n        dataRight = roundTo(slider.getInfo().right, 'up');\n\n    minText.text( dataLeft );\n    maxText.text( dataRight );\n    minValue.val( dataLeft );\n    maxValue.val( dataRight );\n  }\n}\n\n/**\n * A method to round number to the nearest up or down based on number of digits \n * @param  {[integer]}  integer [any number]\n * @param  {[string]}   near    [it can be up or down]\n * @return {[integer]}          [returns the nearest number based on number of digits]\n */\nfunction roundTo(integer, near){\n  integer = parseInt(Math.round(integer));\n  var digits = parseInt(integer.toString().length);\n  \n  if( integer > 0 ){\n    if( integer > 99 ){\n      var zeroDigits = '';\n      for (i = 0; i < digits - 2; i++) {\n        zeroDigits += '0';\n      }\n      nearest = parseInt('1' + zeroDigits);\n    } else {\n      nearest = 5;\n    }\n    \n    if( near === 'up' )\n      return Math.floor( integer / nearest ) * nearest;\n    else\n      return Math.ceil( integer / nearest ) * nearest;\n      \n  } else\n    return integer;\n}\n\nfunction isVisible(element){\n  if( $(element).length ){\n    var win = $(window);\n    var pageTop = (win.scrollTop() + ~~(isNaN($(element).customHeight)?0:$(element).customHeight));\n    var pageBottom = pageTop + win.height();\n    var elementTop = $(element).offset().top;\n    var elementBottom = elementTop + $(element).height();\n\n    if($(element).threshold && typeof $(element).threshold === 'number'){\n      elementBottom = elementBottom - $(element).threshold;\n    }\n    if ($(element).fullyInView === true) {\n      return ((pageTop < elementTop) && (pageBottom > elementBottom));\n    } else {\n      return ((elementTop <= pageBottom) && (elementBottom >= pageTop));\n    }\n  }\n}\n\nfunction initFancyBoxy(){\n  if( $('.fancybox').length )\n    $('.fancybox').fancybox();\n}\n\nfunction initLayoutSwitcher(){\n  var layoutSwitcher = $('[data-layout-switcher]');\n  \n  if( layoutSwitcher.length ){\n    $(document).on('click','[data-layout]:not(.active)',function(){\n      var layout = $(this).data('layout');\n      \n      $( \"[data-thumb-class]\" ).each(function( index ) {\n        $(this).removeClass( $(this).data('thumb-class') );\n        $(this).removeClass( $(this).data('list-class') );\n        $(this).addClass( $(this).data(layout+'-class') );\n      });\n      \n      $('[data-layout]').removeClass('active');\n      $(this).addClass('active');\n    });\n  }\n}\n"]}